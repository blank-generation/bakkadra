import { TemporaryConnectionState } from './connection';
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    x1: {
        type: NumberConstructor;
        required: true;
    };
    y1: {
        type: NumberConstructor;
        required: true;
    };
    x2: {
        type: NumberConstructor;
        required: true;
    };
    y2: {
        type: NumberConstructor;
        required: true;
    };
    state: {
        type: () => TemporaryConnectionState;
        default: TemporaryConnectionState;
    };
    isTemporary: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, {
    d: import('vue').ComputedRef<string>;
    classes: import('vue').ComputedRef<{
        "--temporary": boolean;
        "--allowed": boolean;
        "--forbidden": boolean;
    }>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    x1: {
        type: NumberConstructor;
        required: true;
    };
    y1: {
        type: NumberConstructor;
        required: true;
    };
    x2: {
        type: NumberConstructor;
        required: true;
    };
    y2: {
        type: NumberConstructor;
        required: true;
    };
    state: {
        type: () => TemporaryConnectionState;
        default: TemporaryConnectionState;
    };
    isTemporary: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{}>, {
    state: TemporaryConnectionState;
    isTemporary: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;

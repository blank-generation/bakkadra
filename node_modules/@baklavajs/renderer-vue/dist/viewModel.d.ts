import { AbstractNode, Editor, Graph, GraphTemplate, NodeInterface } from '@baklavajs/core';
import { IBaklavaTapable, SequentialHook } from '@baklavajs/events';
import { ICommandHandler } from './commands';
import { IClipboard } from './clipboard';
import { IHistory } from './history';
import { IViewSettings } from './settings';
export interface IBaklavaViewModel extends IBaklavaTapable {
    editor: Editor;
    /** Currently displayed graph */
    displayedGraph: Graph;
    /** True if the currently displayed graph is a subgraph, false if it is the root graph */
    isSubgraph: Readonly<boolean>;
    settings: IViewSettings;
    commandHandler: ICommandHandler;
    history: IHistory;
    clipboard: IClipboard;
    hooks: {
        /** Called whenever a node is rendered */
        renderNode: SequentialHook<{
            node: AbstractNode;
            el: HTMLElement;
        }, null>;
        /** Called whenever an interface is rendered */
        renderInterface: SequentialHook<{
            intf: NodeInterface<any>;
            el: HTMLElement;
        }, null>;
    };
    switchGraph: (newGraph: Graph | GraphTemplate) => void;
}
export declare function useBaklava(existingEditor?: Editor): IBaklavaViewModel;

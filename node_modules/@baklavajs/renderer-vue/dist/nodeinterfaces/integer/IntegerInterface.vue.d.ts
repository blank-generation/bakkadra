import { IntegerInterface } from './IntegerInterface';
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    intf: {
        type: () => IntegerInterface;
        required: true;
    };
}>, {
    increment: () => void;
    decrement: () => void;
    editMode: import('vue').Ref<boolean, boolean>;
    invalid: import('vue').Ref<boolean, boolean>;
    tempValue: import('vue').Ref<string, string>;
    inputEl: import('vue').Ref<HTMLInputElement | null, HTMLInputElement | null>;
    stringRepresentation: import('vue').ComputedRef<string>;
    validate: (v: number) => boolean;
    setValue: (newValue: number) => void;
    enterEditMode: () => Promise<void>;
    leaveEditMode: () => void;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    intf: {
        type: () => IntegerInterface;
        required: true;
    };
}>> & Readonly<{}>, {}, {}, {
    "i-arrow": import('vue').DefineComponent<{}, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, SVGSVGElement>;
}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;

import { NodeInstanceOf, NodeInterface, GraphInputNode, GraphOutputNode } from '@baklavajs/core';
import { TextInputInterface } from '../nodeinterfaces';
/** @deprecated use GRAPH_INPUT_NODE_TYPE from the @baklavajs/core package instead */
export declare const SUBGRAPH_INPUT_NODE_TYPE = "__baklava_SubgraphInputNode";
/** @deprecated use GRAPH_OUTPUT_NODE_TYPE from the @baklavajs/core package instead */
export declare const SUBGRAPH_OUTPUT_NODE_TYPE = "__baklava_SubgraphOutputNode";
export declare class SubgraphInputNode extends GraphInputNode {
    protected _title: string;
    inputs: {
        name: TextInputInterface;
    };
    outputs: {
        placeholder: NodeInterface<undefined>;
    };
}
export declare class SubgraphOutputNode extends GraphOutputNode {
    protected _title: string;
    inputs: {
        name: TextInputInterface;
        placeholder: NodeInterface<undefined>;
    };
    outputs: {
        output: NodeInterface<undefined>;
    };
}
/** @deprecated */
export interface ISubgraphInterfaceNode {
    graphInterfaceId: string;
}
/** @deprecated */
export type InputNode = NodeInstanceOf<typeof SubgraphInputNode> & ISubgraphInterfaceNode;
/** @deprecated */
export type OutputNode = NodeInstanceOf<typeof SubgraphOutputNode> & ISubgraphInterfaceNode;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyConnection = exports.Connection = void 0;
const uuid_1 = require("uuid");
const events_1 = require("@baklavajs/events");
class Connection {
    constructor(from, to) {
        this.destructed = false;
        this.events = {
            destruct: new events_1.BaklavaEvent(this),
        };
        if (!from || !to) {
            throw new Error("Cannot initialize connection with null/undefined for 'from' or 'to' values");
        }
        this.id = (0, uuid_1.v4)();
        this.from = from;
        this.to = to;
        this.from.connectionCount++;
        this.to.connectionCount++;
    }
    destruct() {
        this.events.destruct.emit();
        this.from.connectionCount--;
        this.to.connectionCount--;
        this.destructed = true;
    }
}
exports.Connection = Connection;
/**
 * This class is used for calculation purposes only.
 * It won't alter any state of the connected nodes
 */
class DummyConnection {
    constructor(from, to) {
        if (!from || !to) {
            throw new Error("Cannot initialize connection with null/undefined for 'from' or 'to' values");
        }
        this.id = (0, uuid_1.v4)();
        this.from = from;
        this.to = to;
    }
}
exports.DummyConnection = DummyConnection;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineNode = defineNode;
const node_1 = require("./node");
function defineNode(definition) {
    return class extends node_1.Node {
        constructor() {
            var _a, _b;
            super();
            this.type = definition.type;
            this.inputs = {};
            this.outputs = {};
            this.calculate = definition.calculate
                ? (inputs, globalValues) => {
                    return definition.calculate.call(this, inputs, globalValues);
                }
                : undefined;
            this._title = (_a = definition.title) !== null && _a !== void 0 ? _a : definition.type;
            this.executeFactory("input", definition.inputs);
            this.executeFactory("output", definition.outputs);
            (_b = definition.onCreate) === null || _b === void 0 ? void 0 : _b.call(this);
        }
        onPlaced() {
            var _a;
            (_a = definition.onPlaced) === null || _a === void 0 ? void 0 : _a.call(this);
        }
        onDestroy() {
            var _a;
            (_a = definition.onDestroy) === null || _a === void 0 ? void 0 : _a.call(this);
        }
        executeFactory(type, factory) {
            Object.keys(factory || {}).forEach((k) => {
                const intf = factory[k]();
                if (type === "input") {
                    this.addInput(k, intf);
                }
                else {
                    this.addOutput(k, intf);
                }
            });
        }
    };
}

import { type GraphTemplate } from "./graphTemplate";
import { Graph, IGraphState } from "./graph";
import { AbstractNode, INodeState } from "./node";
export interface IGraphNodeState extends INodeState<any, any> {
    graphState: IGraphState;
}
export interface IGraphNode {
    template: GraphTemplate;
    subgraph: Graph | undefined;
}
export declare const GRAPH_NODE_TYPE_PREFIX = "__baklava_GraphNode-";
export declare function getGraphNodeTypeString(template: GraphTemplate): string;
export declare function createGraphNodeType(template: GraphTemplate): new () => AbstractNode & IGraphNode;

import { BaklavaEvent, IBaklavaEventEmitter } from "@baklavajs/events";
import type { NodeInterface } from "./nodeInterface";
export interface IConnection {
    id: string;
    from: NodeInterface;
    to: NodeInterface;
}
export interface IConnectionState extends Record<string, any> {
    /** id of the connection */
    id: string;
    /** id of the source interface */
    from: string;
    /** id of the target interface */
    to: string;
}
export declare class Connection implements IConnection, IBaklavaEventEmitter {
    id: string;
    from: NodeInterface;
    to: NodeInterface;
    destructed: boolean;
    events: {
        readonly destruct: BaklavaEvent<void, Connection>;
    };
    constructor(from: NodeInterface, to: NodeInterface);
    destruct(): void;
}
/**
 * This class is used for calculation purposes only.
 * It won't alter any state of the connected nodes
 */
export declare class DummyConnection implements IConnection {
    id: string;
    from: NodeInterface;
    to: NodeInterface;
    constructor(from: NodeInterface, to: NodeInterface);
}

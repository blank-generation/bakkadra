import { AbstractNode, Graph, INodeUpdateEventData } from "@baklavajs/core";
import { BaseEngine, CalculationResult } from "./baseEngine";
export declare class ForwardEngine<CalculationData = any> extends BaseEngine<CalculationData, [
    startingNode: AbstractNode,
    nodeUpdateEvent: INodeUpdateEventData | undefined
]> {
    runGraph(graph: Graph, inputs: Map<string, any>, calculationData: CalculationData): Promise<CalculationResult>;
    protected execute(calculationData: CalculationData, startingNode: AbstractNode, data: INodeUpdateEventData | undefined): Promise<CalculationResult>;
    protected onChange(recalculateOrder: boolean, updatedNode?: AbstractNode, data?: INodeUpdateEventData): void;
    /** Get the current value of all input interfaces of the given node */
    private getDataForNode;
}

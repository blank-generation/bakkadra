import type { Editor, Graph, NodeInterface, CalculationResult } from "@baklavajs/core";
import { BaseEngine } from "./baseEngine";
export declare const allowMultipleConnections: <T extends Array<any>>(intf: NodeInterface<T>) => void;
export declare class DependencyEngine<CalculationData = any> extends BaseEngine<CalculationData, []> {
    private order;
    constructor(editor: Editor);
    start(): void;
    runGraph(graph: Graph, inputs: Map<string, any>, calculationData: CalculationData): Promise<CalculationResult>;
    protected execute(calculationData: CalculationData): Promise<CalculationResult>;
    getInputValues(graph: Graph): Map<string, any>;
    protected onChange(recalculateOrder: boolean): void;
    private getInterfaceValue;
}
